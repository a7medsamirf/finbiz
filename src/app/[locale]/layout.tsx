import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import ThemeProviderWrapper from "@/components/Settings/ThemeProviderWrapper";
import { getTranslations , getMessages } from "next-intl/server";
import {notFound} from 'next/navigation';
import { getLangDir }  from 'rtl-detect';


// Google Font
import { El_Messiri , DM_Sans } from "next/font/google";

// Styles
import "/public/assets/sass/animate.css";
import "./globals.css";
import "/public/assets/sass/globals.css"; 

// Components
import Navbar from "@/components/Navbar/Navbar";
import Footer from "@/components/Footer/Footer";
import LoadingOverlay from "@/components/Settings/LoadingOverlay";

// Font setup
const elMessiri = El_Messiri({
  subsets: ['arabic'],
  display: 'swap',
  variable: '--font-elMessiri',
});

const dmSans = DM_Sans({
  subsets: ['latin'],
  display: 'swap',
  variable: '--font-dmSans',
});

// Metadata
export async function generateMetadata(): Promise<Metadata> {

  const t = await getTranslations("Navbar"); 
  return {
    title: {
      default: "فينفيز | Finbiz",
      template: `%s | ${t("Metadata.title")}`
    },
    description: "Generated by Next.js",
    icons: {
      icon: '/assets/images/logo/favicon.ico', // remove `/public`, it's already public root
    },

  }
}

// Layout Component
export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: { locale: string };
}) {
  const { locale } = await params;
  const direction = getLangDir(locale);


  // Ensure that the incoming `locale` is valid

  // Validate locale
  if (!["en", "ar"].includes(locale)) return notFound();

  const messages = await getMessages();

  
  return (
    <html
        lang={locale}
        dir={direction} // Sets the correct text direction (ltr or rtl)
        className={`dark ${locale === 'ar' ? elMessiri.variable : dmSans.variable}`} // Apply the correct font variable
        suppressHydrationWarning
    >
                       
      <body className="bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300 font-sans text-left rtl:text-right">
      <LoadingOverlay />
      <ThemeProviderWrapper>

          <NextIntlClientProvider locale={locale} messages={messages}>
              <Navbar />
                <main>{children}</main>
              <Footer />
          </NextIntlClientProvider>
  
        </ThemeProviderWrapper>
   

      </body>
    </html>
  );
}
